version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-liminal}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-liminal_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-liminal}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - liminal_network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - liminal_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-liminal}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-liminal_db}
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      ALGORITHM: ${ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      CORS_ORIGINS: ${CORS_ORIGINS:-["http://localhost:3000","http://10.0.0.163:3000","http://127.0.0.1:3000"]}
      API_V1_STR: ${API_V1_STR:-/api/v1}
      ENVIRONMENT: development
    volumes:
      - ./backend:/app
      - ./storage:/app/storage
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - liminal_network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    depends_on:
      - backend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://10.0.0.163:8000}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "0.0.0.0:3000:3000"
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"]
    networks:
      - liminal_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  liminal_network:
    driver: bridge 