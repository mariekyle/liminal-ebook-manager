version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: liminal-postgres
    environment:
      POSTGRES_DB: liminal_ebooks
      POSTGRES_USER: liminal_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - liminal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U liminal_user"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: liminal-backend
    environment:
      - DATABASE_URL=postgresql://liminal_user:${POSTGRES_PASSWORD:-changeme}@postgres:5432/liminal_ebooks
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - UPLOAD_MAX_SIZE=100MB
      - LOG_LEVEL=info
    volumes:
      - ebook_storage:/app/uploads
    networks:
      - liminal-network
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: liminal-frontend
    environment:
      - VITE_API_URL=http://localhost:8000
    networks:
      - liminal-network
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  ebook_storage:
    driver: local

networks:
  liminal-network:
    driver: bridge